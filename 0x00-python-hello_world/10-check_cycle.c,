#include "lists.h"

/**
* check_cycle - checks if a singly linked list has a cycle in it.
* a cycle in it
* @list: A singly-linked list.
* Return: If there is no cycle - 0.
* If there is a cycle - 1.
*/
int check_cycle(listint_t *list)
{
listint_t *p2;
listint_t *prev;
p2 = list;
prev =list;
while (list && p2 && p2->next)
{
list = list->next;
if (list == p2)
{
list = prev;
prev = p2;
while (1)
{
p2 = prev;
while (p2->next != list && p2->next != prev)
{
p2 = p2->next
;
}
if (p2->next == list)
break
;
list = list->next
;
}
return (1);
}
}
}
return (0);
}
